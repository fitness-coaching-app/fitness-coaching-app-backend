# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Dev - Deploy to Cloud Functions

on:
  push:
    branches: [ develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - name: Build
        run: npm run build
      - name: Copy package.json to build/src folder & Change target
        run: jq '.main = "index.js"' package.json > build/src/package.json
      - name: Cloud Functions Deploy
        uses: google-github-actions/deploy-cloud-functions@v0.1.2
        id: deploy
        with:
          name: dev-api
          # Project to deploy the function in.
          project_id: ${{ secrets.RUN_PROJECT }}
          # The email address of the IAM service account associated with the function at runtime.
          service_account_email: ${{ secrets.SA_EMAIL }}
          credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          # Region to deploy the function in. Defaults to us-central1, if not specified.
          region: asia-southeast1
          # Path to function deployment directory within the source repo.
          source_dir: ./build/src
          # Name of a function (as defined in source code) that will be executed. Defaults to the resource name suffix, if not specified.
          entry_point: api
          # Runtime to use for the function.
          runtime: nodejs14
          env_vars: MONGODB_URI=${{ secrets.DEV_MONGODB_URI }},GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }},API_HOST_URL=${{ secrets.DEV_API_HOST_URL }},JWT_SECRET=${{secrets.JWT_SECRET}}
  
